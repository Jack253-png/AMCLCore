buildscript {
    repositories {
        maven { url = "https://maven.aliyun.com/repository/public" }
        maven { url = "https://maven.aliyun.com/repository/jcenter" }
        maven { url = "https://maven.aliyun.com/repository/google" }
        maven { url = "https://maven.aliyun.com/repository/central" }
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group 'com.mcreater'
version '0.1'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.verbose = false
    options.listFiles = true
    options.annotationProcessorPath = files(new File(rootProject.getRootDir().getAbsolutePath(), "lombok.jar").getAbsolutePath())
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.verbose = false
    options.listFiles = true
    options.annotationProcessorPath = files(new File(rootProject.getRootDir().getAbsolutePath(), "lombok.jar").getAbsolutePath())
}

repositories {
    maven { url = "https://maven.aliyun.com/repository/public" }
    maven { url = "https://maven.aliyun.com/repository/jcenter" }
    maven { url = "https://maven.aliyun.com/repository/google" }
    maven { url = "https://maven.aliyun.com/repository/central" }
    mavenCentral()
}

dependencies {
    implementation project(path: ':core')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

}

test {
    useJUnitPlatform()
}

ext {
    javaMainClass = "com.mcreater.amclcore.Main"
}

application {
    mainClassName = javaMainClass
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
//    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title "Javadoc root"
    }
}

publishing {
    publications {
        amclcore_shell(MavenPublication) {
            groupId group
            artifactId name
            version version

            artifact sourcesJar
            artifact jar
            // artifact javadocJar
        }
    }

    repositories {
        maven { url uri(new File(rootProject.projectDir.getAbsolutePath(), "maven").getAbsolutePath()) }
    }
}