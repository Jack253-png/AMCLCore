buildscript {
    repositories {
        maven { url = "https://maven.aliyun.com/repository/central" }
        mavenCentral()
        maven { url = "https://maven.aliyun.com/repository/public" }
        maven { url = "https://maven.aliyun.com/repository/jcenter" }
        maven { url = "https://maven.aliyun.com/repository/google" }
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.mcreater'
version '0.1-alpha2'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.verbose = false
    options.listFiles = true
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.verbose = false
    options.listFiles = true
}

repositories {
    maven { url = "https://maven.aliyun.com/repository/central" }
    mavenCentral()
    maven { url = "https://maven.aliyun.com/repository/public" }
    maven { url = "https://maven.aliyun.com/repository/jcenter" }
    maven { url = "https://maven.aliyun.com/repository/google" }
}

dependencies {
    implementation project(path: ':core')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    rootProject.getSubprojects().stream()
            .filter { return it.name == "core" }
            .findFirst()
            .orElse(rootProject).configurations.implementation.dependencies
            .forEach { implementation(it) }
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title "Javadoc root"
    }
}

publishing {
    publications {
        amclcore_shell(MavenPublication) {
            groupId group
            artifactId name
            version version

            artifact sourcesJar
            artifact jar
//            artifact javadocJar

            pom.withXml {
                Node root = asNode().appendNode("dependencies", new HashMap())
                Node dependencyNode = root.appendNode("dependency")
                dependencyNode.appendNode('groupId', "com.mcreater")
                dependencyNode.appendNode('artifactId', "amclcore_core")
                dependencyNode.appendNode('version', version)
            }
        }
    }

    repositories {
        maven { url uri(new File(rootProject.projectDir.getAbsolutePath(), "maven").getAbsolutePath()) }
    }
}